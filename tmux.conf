###PREFIX
#set-option -g prefix C-a
set-option -g prefix `
# rotate prefix `(back-tick) with C-a when needed
bind-key C-a set-option -g prefix C-a
bind-key C-b set-option -g prefix `
# double-tap prefix key to switch between the last two windows
#bind-key C-a last-window
bind-key ` last-window
bind-key a send-prefix


###CONFIGURATIONS which depend on tmux version
#NOTE: tmux not backward compatibility (tmux#1732)
# set new env var to recognize version
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# version 2.1 "mouse" replaced the 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
    "set -g mouse on"

# version 2.2: UTF8 is autodetected, but errors if set without quite flag '-q'
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
    "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

# version 2.4: bind-key syntax changed -- select/copy
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' " \
    bind-key -t vi-copy v begin-selection; \
    bind-key -t vi-copy V select-line; \
    bind-key -t vi-copy y copy-pipe 'xclip -in -selection clipboard >/dev/null'"
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' " \
    bind-key -T copy-mode-vi v send -X begin-selection; \
    bind-key -T copy-mode-vi V send -X select-line; \
    bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"


# paste from buffer after doing copy
bind-key p paste-buffer

# keep more history
set-option -g history-limit 10000
# clear screen and scrollback buffer
#bind-key y send-keys "clear"\; send-keys "Enter"\; clear-history
bind-key y send-keys C-l \; clear-history

set -g default-terminal "screen-256color"
set -as terminal-overrides ',*:indn@'

# use prefix + r to reload tmux.conf
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# tell tmux to pass some specific keys correctly through terminal
set-window-option -g xterm-keys on


###NAVIGATION vi-like
# use vi-like keys
set-option -g mode-keys vi

# vi-like pane navigation (prefix + key)
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
# vi-like pane resizing (prefix + Ctrl+key)
# allow to press other key without bind-key within 1000ms (default 500ms)
set-option -g repeat-time 1000
bind-key -r C-h resize-pane -L 3
bind-key -r C-j resize-pane -D 3
bind-key -r C-k resize-pane -U 3
bind-key -r C-l resize-pane -R 3


###Update enviroment variables
#append these env-vars if only not done
if-shell -b '[ -z "$(tmux show-environment | grep PATH)" ]' " \
    set-option -ga update-environment ' LD_LIBRARY_PATH PATH \
                                        KONSOLE_PROFILE_NAME \
                                        KONSOLE_DBUS_WINDOW \
                                        KONSOLE_DBUS_SESSION'"


###
# some screen-like shortcuts
# first reassign tmux's default Space binding (to mimic GNU screen)
bind-key C-Space next-layout
# use space and backspace to cycle through windows
bind-key Space next-window
bind-key BSpace previous-window

# toggle window activity monitor
bind-key m setw monitor-activity


# create new window next to current one
bind-key C new-window -a
bind-key '-' split-window -v -c '#{pane_current_path}'
bind-key '\' split-window -h -c "#{pane_current_path}"
bind-key c new-window -c '#{pane_current_path}'
bind-key v split-window -p 20 -v -c '#{pane_current_path}'


# scrolling
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M


# duration of message display
set-option -g display-time 1000

# don't use ESC-key combinations in any terminal program.
# so no need to wait for a second key after ESC was pressed.
set -sg escape-time 0
# set window start index at 1 instead 0
set -g base-index 1

# focus events enabled for terminals that support them
set -g focus-events on



###LAYOUT default minimal
# statusbar white text in black background (base02)
set-option -g status-style fg=colour15,bg=colour235

# LEFT SECTION
# allow display of longer window names
set -g status-left-length 100
set -g status-left "#S#"

# RIGHT SECTION (cyan bold)
set -g status-right "#[fg=colour06,bold] < %Y-%m-%d | %H:%M | #h "

# WINDOWS TITLE
set -g window-status-format " #I #W "
# active window: bright cyan bold
set -g window-status-current-format "#[fg=colour14,bold] [#I #W] "

# PANE BORDER
set-option -g pane-border-style fg=colour235            #base02
set-option -g pane-active-border-style fg=colour240     #base01
# MESSAGE TEXT
set-option -g message-style fg=colour14,bg=colour235

####COLORSCHEME
# check file existence and sourcing theme created by tmuxline.vim
# loaded theme overrides default layout
#TMUX_THEME='$HOME/.config/tmux/zenburn'
#if-shell "test -f $TMUX_THEME" "source $TMUX_THEME"
#command show color palette
#for i in {0..255} ; do printf "\x1b[38;5;${i}mcolour${i}\n"; done

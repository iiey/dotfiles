#!/bin/bash
#script: my functions

#ignoreboth(space and consecutive duplicates), remove duplicates
HISTCONTROL=ignoreboth:erasedups
# save and reload the history after each command finishes
# this could change index of commands in .bash_history
if [ -z "${PROMPT_COMMAND}" ]; then
    PROMPT_COMMAND="history -a; history -c; history -r;"
else
    PROMPT_COMMAND="history -a; history -c; history -r; ${PROMPT_COMMAND}"
fi

#enable star globbing
[ $BASH_VERSINFO -ge 4 ] && shopt -s globstar

#ALIASES
# up dir
alias 2.='cd ../../'
alias 3.='cd ../../../'
alias 4.='cd ../../../..'

# custom ls
alias l='ls -aCF'
alias la='ls -laAh'     #long list all
alias ll='ls -lFh'      #long list without .

# vim abbreviations
alias v='vim'
alias vi='vim'
alias g='gvim'
alias gv='gvim'
alias gvi='gvim'

#todo: gerneral cd to switch between source and build
#echo ${PWD%build*} delete all from left of match
#echo ${PWD#*build} delete all from right of match
alias ..='test -d ${PWD%build*}${PWD#*build} && cd ${PWD%build*}${PWD#*build}'

#ranger (exit but stay in ranger current directory)
alias ranger='ranger --choosedir=$HOME/.rangerdir; LASTDIR=`cat $HOME/.rangerdir`; cd "$LASTDIR"'
alias rg='ranger'

#silver search
alias ag="ag --noheading --smart-case --skip-vcs-ignores \
            --path-to-ignore $HOME/.agignore \
            --color-match '01;31' \
            --color-path '36' \
            --color-line-number '32'"

#ctags
#see $HOME/.ctags for default parameter configuration
alias tags='ctags -R -f ./.tags .'

git-ctags() {
    #read project root dir from git
    local dir=$(git rev-parse --show-toplevel)
    #return if not found (in .git or outside cvs)
    [ -z $dir ] && return
    #execute 'git init' if hooks was not copied (from local template)
    #note: directory changing and init are done in subshell (...)
    [ -f "${dir}/.git/hooks/ctags" ] || ( cd $dir && git init )
    #call ctags
    eval "${dir}/.git/hooks/ctags"
}

#tree
alias tree="tree -CAFa -I 'CVS|.git|.svn' --dirsfirst"

#start tmux with colourful xterm and force it assuming term supported 256colour
alias tmux='TERM=xterm-256color tmux -2'

#create tmux default working session
#note: double quote to correctly expand var $HOME with tmux
tmux-session() {
    #check existance of tmux
    [ -z "$(type -t tmux)" ] && return
    #create default session "dev" with some windows if no parameters are given
    [ $# -eq 0 ] && set -- "dev" "field" "labor" "vm" "rvm"
    #note: arg1: session name, arg2: first window, arg3: second window,..
    local cmd="tmux new -s "$1" -n "$2""
    for i in "${@:3}"; do cmd="${cmd} \; new-window -n $i"; done
    #as default switch to working dir at last window
    [ -d $HOME/sources/git/rvm ] && cmd="${cmd} -c "$HOME/sources/git/rvm""
    eval $cmd
}


#disable legacy feature of terminal emulator Software Flow Control
#prevent accidentally pressing c-s/c-q
#check interactive shell before enable foreward-search
[[ $- == *i*  ]] && stty -ixon


#mc colorscheme:asterisk, blue, bluemoon, dark, darkened, gotar, nicedark, solarized,...
case "$KONSOLE_PROFILE_NAME" in
    Solarized)      mc_color=solarized;;
    DarkPastels)    mc_color=gotar;;
    *)
        mc_color=default
        if [ -x /usr/bin/dircolors ]; then
            test -r ~/.dircolors && eval "$(dircolors -b)"
        fi
        ;;
#todo default case
esac


#mc colorscheme located unter ~/.local/share/mc/skins
alias mc='mc -S $mc_color'
mc-color() {
    if [ ! "$#" -eq 1 ]
    then
        echo "Usage:mc-color param"
        echo "param: gotar, nicedark, blue, bluemoon, dark, modarin256, solarized, asterisk"
    else
        mc_color="$1"
        mc
    fi
}


# switch term colorscheme
term-color() {
    if [ ! "$#" -eq 1 ]
    then
        echo "Usage: term-color param"
        echo "param: Linux, BlackOnWhite, WhiteOnBlack, BlueOnBlack, GreenOnBlack, DarkPastels, Solarized, SolarizedLight..."
    else
        # fix problem with konsoleprofile in tmux
        if [[ -z "$TMUX" ]]
        then
            konsoleprofile "colors=$1"
        else
            printf '\033Ptmux;\033\033]50;%s\007\033\\' "colors=$1"
        fi
        export KONSOLE_PROFILE_NAME=$1
    fi
}


# grep_options
GREP_OPTIONS=
for pattern in .cvs .git .svn build HMI-Display; do
    GREP_OPTIONS="$GREP_OPTIONS --exclude-dir=$pattern"
done
for pattern in .tags .png; do
    GREP_OPTIONS="$GREP_OPTIONS --exclude=$pattern"
done
unset pattern
export GREP_OPTIONS

# using ccache instead of gcc
[[ $PATH != *"/usr/lib/ccache"* ]] && [[ -d /usr/lib/ccache ]] && export PATH=/usr/lib/ccache/:${PATH}

#enable some extra features
[ -f ~/.autojump/etc/profile.d/autojump.sh ] && source ~/.autojump/etc/profile.d/autojump.sh
[ -f ~/.apparix_bash ] && source ~/.apparix_bash                #bookmark directories
[ -f ~/.git-completion.bash ] && source ~/.git-completion.bash  #more completions
[ -f ~/.rvm_functions ] && source ~/.rvm_functions              #rvm functions

# Default editor
export EDITOR=vim
